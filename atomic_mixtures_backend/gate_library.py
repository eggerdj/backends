# -*- coding: utf-8 -*-

# This code is part of Qiskit.
#
# (C) Copyright IBM 2021.
#
# This code is licensed under the Apache License, Version 2.0. You may
# obtain a copy of this license in the LICENSE.txt file in the root directory
# of this source tree or at http://www.apache.org/licenses/LICENSE-2.0.
#
# Any modifications or derivative works of this code must retain this
# copyright notice, and modified files need to carry a notice indicating
# that they have been altered from the originals.

from functools import wraps
from qiskit.circuit.gate import Gate
from qiskit import QuantumCircuit


def add_gate(func):
    """Decorator to add a gate method to the QuantumCircuit class"""
    @wraps(func)
    def wrapper(*args, **kwargs):
        return func(*args, **kwargs)

    setattr(QuantumCircuit, func.__name__, wrapper)

    return func


class LXGate(Gate):
    r"""Rotation of the collective spin of a cold atomic BEC around the x-axis

    **Circuit symbol:**

    .. parsed-literal::

             ┌───────────┐
        q_0: ┤ Rx(omega) ├
             └───────────┘
    """
    def __init__(self, omega, label=None):
        """Create new RX gate."""
        super().__init__('rLx', 1, [omega], label=label)


@add_gate
def lx(self, omega, wire):
    """add the RLX gate to a QuantumCircuit"""
    return self.append(LXGate(omega), [wire], [])


class LZGate(Gate):
    r"""Rotation of the collective spin of a cold atomic BEC around the z-axis

    **Circuit symbol:**

    .. parsed-literal::

             ┌───────────┐
        q_0: ┤ Rz(delta) ├
             └───────────┘

    """

    def __init__(self, delta, label=None):
        """Create new RZ gate."""
        super().__init__('rLz', 1, [delta], label=label)


@add_gate
def lz(self, delta, wire):
    """add the RLZ gate to a QuantumCircuit"""
    return self.append(LZGate(delta), [wire], [])


class LZ2Gate(Gate):
    r"""Evolution of a coherent spin under the one-axis-twisting Hamiltonian generated by Lz^2'.

    **Circuit symbol:**

    .. parsed-literal::

             ┌──────────┐
        q_0: ┤ Rz2(chi) ├
             └──────────┘
    """

    def __init__(self, chi, label=None):
        """Create new rz2 gate."""
        super().__init__("rLz2", 1, [chi], label=label)


@add_gate
def lz2(self, chi, wire):
    """add the RLZ2 gate to a QuantumCircuit"""
    return self.append(LZ2Gate(chi), [wire], [])


class GeneralRotation(Gate):
    r"""Evolution of a coherent spin under the one-axis-twisting Hamiltonian generated by
    the Hamiltonian H = chi*Lz^2 + delta*Lz + omega*Lx
    """

    def __init__(self, chi, delta, omega, label=None):
        """Create new general rotation gate."""
        super().__init__('rot', 1, [chi, delta, omega], label=label)
